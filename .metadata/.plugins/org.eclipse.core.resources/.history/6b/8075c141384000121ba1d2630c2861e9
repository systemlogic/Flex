import com.emc.ecuit.flex.components.application.ProgressMonitor;
import com.emc.ecuit.flex.components.wizards.ECUITWizard;
import com.emc.fma.views.Utility.UtilityFunctionClass;

import com.emc.fma.utils.Common;
import com.emc.fma.utils.RESTClient;
import com.emc.fma.utils.RESTEvent;
      
import mx.collections.ArrayCollection;
import mx.events.FlexEvent;
import mx.events.FlexMouseEvent;
import mx.resources.ResourceManager;
import mx.utils.StringUtil;

private var _enableBackButton:Boolean = true;
private var _initialized:Boolean = false;

public static const ATTR_userName        :String = "CIFSUser";
public static const ATTR_password        :String = "CIFSPass";
public static const ATTR_domainName      :String = "CIFSDomain";
public static const ATTR_ISQUALIFIED     :String = "isQualified";
      
public var _defaultEnterName:String = "";
public var _defaultEnterpassword:String = "";
public var _defaultEnterdomainName:String = "";

[Bindable] private var kerberosDomain:String;

override public function postDisplay():void 
{
  if ( !_initialized )
  {
    _initialized = true;

    // Pull defaults from wizard data
    var def:Object = getData(ATTR_userName);

    if ( def != null )
      _defaultEnterName = String(def);

    def = getData(ATTR_password);
    if ( def != null )
      _defaultEnterpassword = String(def);

    def = getData(ATTR_domainName);
    if ( def != null )
      _defaultEnterdomainName = String(def);
  }

  if ( netBios.selected )
    currentState = 'netBIOSState';
  else if ( kerberos.selected )
    currentState = 'kerberosState';

  setData(ResourceManager.getInstance().getString("fma", "STEP"), this.name);
  userName_updateCompleteHandler();
  /* enableButtons(validate(), ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);*/
  enableButtons(_enableBackButton, ECUITWizard.ECUITWIZARD_BUTTONID_BACK); 
}

override protected function save():void
{        
  setData(ATTR_userName,        StringUtil.trim(userName.text));
  setData(ATTR_password,        StringUtil.trim(password.text));
  if ( currentState == 'netBIOSState' )
  {
    setData(ATTR_domainName,  domainName.text);
    setData(ATTR_ISQUALIFIED,     "0");
  }
  else if ( currentState == 'kerberosState' )
  {
    setData(ATTR_domainName,  kerberosName.text );
    setData(ATTR_ISQUALIFIED,     "1");
  }
        
  //enableStep(TvShowSelection.STEP_NAME, true);
  stepComplete = true;
}

// Override as we have step specific validation
override protected function validate():Boolean
{
  return true;
}
      
protected function _changeHandler(event:Event):void
{
  if ( netBios.selected )
    currentState = 'netBIOSState';
  else if ( kerberos.selected )
    currentState = 'kerberosState';

  userName_updateCompleteHandler();
}
      
private function _creationCompleteHandler(event:FlexEvent):void
{
  callLater(update);
}

private function update():void
{
  RESTClient.sendGetRequest("/api/domain", OnGetDomainListStatus, progress);
}

private function OnGetDomainListStatus(event:RESTEvent):void
{
  if ( Common.showResponseMessage(this, event) )
    return;

  kerberosDomain =  event.response.KDomain.Name[0];
}
      
protected function userName_updateCompleteHandler():void
{
  if (getData(ResourceManager.getInstance().getString("fma", "STEP")) != this.name )
    return;
  updateButtons();
}

private function updateButtons():void
{
  if ( netBios.selected )
  {
    var check:int = domainName.text.search(UtilityFunctionClass.Domain);
    trace(check);
    if ( (userName.text == "" && password.text == "" && domainName.text == "") || 
         (userName.text != "" && password.text != "" &&  check == 0) )
      enableButtons(true, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
    else
      enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
  }
  else if ( kerberos.selected )
  {
    var checkkerberosName:int = kerberosName.text.search(UtilityFunctionClass.Domain);
    trace(checkkerberosName);
    if ( (userName.text == "" && password.text == "" && kerberosName.text == "") || 
         (userName.text != "" && password.text != "" && checkkerberosName == 0) )
      enableButtons(true, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
    else
      enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
  }
        
  /* if((userName.text == "" && password.text == "" && domainName.text == ""){
     enableButtons(true, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     }else if(userName.text != "" && password.text == ""){
     enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     }else if(userName.text != "" && netBios.selected  && domainName.text == ""){
     enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     }else if(userName.text != "" && kerberos.selected && kerberosName.text == ""){
     enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     }else if(userName.text != "" && netBios.selected  && check != 0){
     enableButtons(false, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     }else{
     enableButtons(true, ECUITWizard.ECUITWIZARD_BUTTONID_NEXT);
     } */
}
