import com.emc.ecuit.flex.components.application.ProgressMonitor;
import com.emc.efx.UxConstants;
import com.emc.efx.core.extensionmgr.UxExtensionManager;
import com.emc.fma.utils.Common;
import com.emc.fma.utils.RESTClient;
import com.emc.fma.utils.RESTEvent;
import com.emc.efx.services.navigation.IUxNavigationService;
import com.emc.efx.utilities.map.UxHashMap;

import mx.resources.ResourceManager;
private var _currentPayload:UxHashMap = null;
override protected function initializeData():void
{
  super.initializeData();

  if (currentPayload != null)
  {
    var action:String = currentPayload.getValue("action");
    var file:String = currentPayload.getValue("file");
    var xml:XML = <REQUEST/>;
    xml.appendChild(<action>
    {action}</action>);
    xml.appendChild(<file>
    {file}</file>);
    RESTClient.sendPostRequest("/viewHistory.htm", xml, onComplete, viewBlock);
  }
}
private function onComplete(event:RESTEvent):void
{
  history.text = event.responseStr;
}

[Bindable]
public function set currentPayload(value:UxHashMap):void
{
  _currentPayload = value;
}

public function get currentPayload():UxHashMap
{
  return _currentPayload;
}
private function onCanel(event:MouseEvent):void
{
  var navService:IUxNavigationService =
  UxExtensionManager.getInstance().getService(UxConstants.
  NAVIGATION_SERVICE) as IUxNavigationService;
  var location:Array = new Array;
  location = navService.currentLocation;
  location.pop();
  navService.navigate(location);
}

