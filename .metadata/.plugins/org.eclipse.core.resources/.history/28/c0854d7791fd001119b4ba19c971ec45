<?xml version="1.0" encoding="utf-8"?>
<UxVBoxWindow xmlns="com.emc.fma.UxExtendedClass.*"
			  xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  xmlns:s="library://ns.adobe.com/flex/spark" 
			  xmlns:mx="library://ns.adobe.com/flex/mx" 
			  xmlns:carousel="com.emc.efx.guitoolkit.components.carousel.*" 
			  xmlns:containers="com.emc.ecuit.flex.components.containers.*"
			  xmlns:boxes="com.emc.efx.guitoolkit.components.boxes.*"
			  implements="com.emc.efx.services.navigation.IUxHasPayload"
			  creationComplete="_initializeHandler(event)" xmlns:views="com.emc.ecuit.flex.components.views.*" 
			  xmlns:form="com.emc.fma.views.Configuration.FileServer.form.*" xmlns:UxExtendedClass="com.emc.fma.UxExtendedClass.*">
	<fx:Script>
		<![CDATA[
			import com.emc.ecuit.flex.components.application.AppTitleBarButton;
			import com.emc.ecuit.flex.components.application.ProgressMonitor;
			import com.emc.ecuit.flex.components.dialogs.ECUITPopupDialog;
			import com.emc.ecuit.flex.components.views.ViewTitleBarButton;
			import com.emc.ecuit.flex.components.views.ViewTitleBarButtonEvent;
			import com.emc.ecuit.flex.events.ECUITPopupDialogEvent;
			import com.emc.ecuit.flex.services.ECUITHelpService;
			import com.emc.efx.UxConstants;
			import com.emc.efx.core.extensionmgr.UxExtensionManager;
			import com.emc.efx.guitoolkit.events.UxViewEvent;
			import com.emc.efx.net.UxURL;
			import com.emc.efx.net.http.UxHttpClient;
			import com.emc.efx.services.navigation.IUxNavigationService;
			import com.emc.efx.utilities.map.UxHashMap;
			import com.emc.fma.views.Utility.Command;
			
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;
			[Bindable] private var response:XMLList;
			[Bindable]private var _client:UxHttpClient;
			
			/* private function doTitleBarButtonClick(event:ViewTitleBarButtonEvent):void{
			ECUITHelpService.getInstance().showHelp("fmaHelp", "srm7_1002");
			} */
			
			
			protected function _initializeHandler(event:FlexEvent):void
			{
				
				
			}
			private function onComplete(event:Event):void{
				viewBlock.updateProgress(100, "default");
				response = new XMLList(_client.response.body);
				username.text = response.username ;
				password.text = response.password;
			}
			
			
			protected function Commit_clickHandler(event:MouseEvent):void
			{
				
				var xml:XML = <REQUEST/>; 
				xml.appendChild(<action>setFileMoverSetting</action>);
				xml.appendChild(<Username>{username.text}</Username>);
				xml.appendChild(<Password>{password.text}</Password>);
				var cmd:Command = new Command(_client,commitComplete,xml,"saveFileMoverSettings.htm",viewBlock);
					_client = cmd.sendCommand();
				viewBlock.progressMonitor.styleName = "UxProgressCanvasProgressMonitor";
				viewBlock.progressCanvas.setupProgressMonitor(ProgressMonitor.PROGBAR_INDETERMINATE);
				
			}
			
			protected function commitComplete(event:Event):void{
				viewBlock.updateProgress(100, "default");
				var dlg : ECUITPopupDialog = ECUITPopupDialog.showMessageDialog(this,(new XMLList(_client.response.body)).Result[0].toString(),ResourceManager.getInstance().getString('fma','CLIENT_ALR') ,ECUITPopupDialog.INFORMATION_MESSAGE);
				dlg.addEventListener(ECUITPopupDialogEvent.POPUP_DIALOG_RESULT, handleConfirmMessage);
			}
			private function handleConfirmMessage(event:ECUITPopupDialogEvent) : void 
			{
				viewBlock.progressCanvas.dispatchEvent(new UxViewEvent(UxViewEvent.UNINITIALIZE_DATA));
				viewBlock.progressCanvas.dispatchEvent(new UxViewEvent(UxViewEvent.INITIALIZE_DATA));
				viewBlock.lastRefreshDate = new Date();
				onCanel(event);
			}
			private var _currentPayload:UxHashMap = null;
			override protected function initializeData():void {
				super.initializeData();
				
				var xml:XML = <REQUEST/>; 
				xml.appendChild(<action>getFileMoverSetting</action>);
				var cmd:Command = new Command(_client,onComplete,xml,"getFileMoverSettings.htm",viewBlock);
				_client = cmd.sendCommand(); 
			}
			[Bindable]
			public function set currentPayload(value:UxHashMap):void {
				_currentPayload = value;
			}
			
			public function get currentPayload():UxHashMap {
				return _currentPayload;
			}
			private function onCanel(event:Event):void {
				var navService:IUxNavigationService =
					UxExtensionManager.getInstance().getService(UxConstants.
						NAVIGATION_SERVICE) as IUxNavigationService;
				var location:Array = new Array;
				location = navService.currentLocation;
				location.pop();
				navService.navigate(location);
			}
			
		]]>
	</fx:Script>
	<UxViewBlock xmlns="com.emc.efx.guitoolkit.components.views.*" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" id="viewBlock" 
				 title="{ResourceManager.getInstance().getString('fma','FILEMOVER')}" width="100%" height="100%"
				 showRefresh="false" showFilter="false" showFind="false" 
				 showExport="false" showPrint="false" showTools="false"
				 helpServiceID="FMAHelpService" helpID="EditFileMoverSttings" 
				 xmlns:tx="com.emc.efx.guitoolkit.components.table.*" 
				 xmlns:buttons="com.emc.efx.guitoolkit.components.buttons.*">
		<mx:Box  width="100%" paddingLeft="10" paddingRight="10" id="tabContainer"
				 paddingBottom="10" paddingTop="10"  
				 height="100%">
			<UxExtendedClass:UxGroupBoxCta title="{ResourceManager.getInstance().getString('fma','FILEMOVER')}" width="50%">
				<mx:Form>
					<mx:FormItem label="{ResourceManager.getInstance().getString('fma','IMP_PRO_USER')}">
						<mx:TextInput id="username" toolTip="{ECUITHelpService.getInstance().getSnippet('esa_1')}" />
					</mx:FormItem>
					<mx:FormItem label="{ResourceManager.getInstance().getString('fma','IMP_PRO_PASS')}">
						<mx:TextInput id="password" displayAsPassword="true"/>
					</mx:FormItem>
				</mx:Form>
			</UxExtendedClass:UxGroupBoxCta >
			
			<mx:HBox height="100%" />
			<mx:HBox>
				<buttons:UxButton label="{ResourceManager.getInstance().getString('fma','BUTTON_COMMIT')}" click="Commit_clickHandler(event)"/>
				<buttons:UxButton label="{ResourceManager.getInstance().getString('fma','BUTTON_CANCEL')}" click="onCanel(event)" />
			</mx:HBox>
		</mx:Box>
	</UxViewBlock>
</UxVBoxWindow>
